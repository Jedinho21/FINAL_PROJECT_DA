{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7e6843b8",
   "metadata": {},
   "source": [
    "# Importing libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c035684e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a77469af",
   "metadata": {},
   "source": [
    "# Loading data sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1fdd39a7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>year_in_school</th>\n",
       "      <th>major</th>\n",
       "      <th>monthly_income</th>\n",
       "      <th>financial_aid</th>\n",
       "      <th>tuition</th>\n",
       "      <th>housing</th>\n",
       "      <th>food</th>\n",
       "      <th>transportation</th>\n",
       "      <th>books_supplies</th>\n",
       "      <th>entertainment</th>\n",
       "      <th>personal_care</th>\n",
       "      <th>technology</th>\n",
       "      <th>health_wellness</th>\n",
       "      <th>miscellaneous</th>\n",
       "      <th>preferred_payment_method</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>19</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Freshman</td>\n",
       "      <td>Psychology</td>\n",
       "      <td>958</td>\n",
       "      <td>270</td>\n",
       "      <td>5939</td>\n",
       "      <td>709</td>\n",
       "      <td>296</td>\n",
       "      <td>123</td>\n",
       "      <td>188</td>\n",
       "      <td>41</td>\n",
       "      <td>78</td>\n",
       "      <td>134</td>\n",
       "      <td>127</td>\n",
       "      <td>72</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>Female</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>1006</td>\n",
       "      <td>875</td>\n",
       "      <td>4908</td>\n",
       "      <td>557</td>\n",
       "      <td>365</td>\n",
       "      <td>85</td>\n",
       "      <td>252</td>\n",
       "      <td>74</td>\n",
       "      <td>92</td>\n",
       "      <td>226</td>\n",
       "      <td>129</td>\n",
       "      <td>68</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>24</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>734</td>\n",
       "      <td>928</td>\n",
       "      <td>3051</td>\n",
       "      <td>666</td>\n",
       "      <td>220</td>\n",
       "      <td>137</td>\n",
       "      <td>99</td>\n",
       "      <td>130</td>\n",
       "      <td>23</td>\n",
       "      <td>239</td>\n",
       "      <td>112</td>\n",
       "      <td>133</td>\n",
       "      <td>Cash</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>23</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>617</td>\n",
       "      <td>265</td>\n",
       "      <td>4935</td>\n",
       "      <td>652</td>\n",
       "      <td>289</td>\n",
       "      <td>114</td>\n",
       "      <td>223</td>\n",
       "      <td>99</td>\n",
       "      <td>30</td>\n",
       "      <td>163</td>\n",
       "      <td>105</td>\n",
       "      <td>55</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>810</td>\n",
       "      <td>522</td>\n",
       "      <td>3887</td>\n",
       "      <td>825</td>\n",
       "      <td>372</td>\n",
       "      <td>168</td>\n",
       "      <td>194</td>\n",
       "      <td>48</td>\n",
       "      <td>71</td>\n",
       "      <td>88</td>\n",
       "      <td>71</td>\n",
       "      <td>104</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>995</td>\n",
       "      <td>22</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Biology</td>\n",
       "      <td>1346</td>\n",
       "      <td>520</td>\n",
       "      <td>3688</td>\n",
       "      <td>969</td>\n",
       "      <td>152</td>\n",
       "      <td>194</td>\n",
       "      <td>151</td>\n",
       "      <td>42</td>\n",
       "      <td>38</td>\n",
       "      <td>252</td>\n",
       "      <td>65</td>\n",
       "      <td>163</td>\n",
       "      <td>Cash</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>996</td>\n",
       "      <td>19</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Biology</td>\n",
       "      <td>1407</td>\n",
       "      <td>560</td>\n",
       "      <td>3380</td>\n",
       "      <td>508</td>\n",
       "      <td>265</td>\n",
       "      <td>52</td>\n",
       "      <td>206</td>\n",
       "      <td>40</td>\n",
       "      <td>98</td>\n",
       "      <td>274</td>\n",
       "      <td>84</td>\n",
       "      <td>135</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>997</td>\n",
       "      <td>20</td>\n",
       "      <td>Male</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>957</td>\n",
       "      <td>393</td>\n",
       "      <td>3497</td>\n",
       "      <td>723</td>\n",
       "      <td>339</td>\n",
       "      <td>139</td>\n",
       "      <td>69</td>\n",
       "      <td>112</td>\n",
       "      <td>46</td>\n",
       "      <td>284</td>\n",
       "      <td>57</td>\n",
       "      <td>28</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>998</td>\n",
       "      <td>22</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>1174</td>\n",
       "      <td>612</td>\n",
       "      <td>3649</td>\n",
       "      <td>543</td>\n",
       "      <td>237</td>\n",
       "      <td>123</td>\n",
       "      <td>200</td>\n",
       "      <td>129</td>\n",
       "      <td>90</td>\n",
       "      <td>190</td>\n",
       "      <td>101</td>\n",
       "      <td>65</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>999</td>\n",
       "      <td>24</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Sophomore</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>541</td>\n",
       "      <td>640</td>\n",
       "      <td>5965</td>\n",
       "      <td>609</td>\n",
       "      <td>270</td>\n",
       "      <td>191</td>\n",
       "      <td>215</td>\n",
       "      <td>139</td>\n",
       "      <td>43</td>\n",
       "      <td>281</td>\n",
       "      <td>88</td>\n",
       "      <td>145</td>\n",
       "      <td>Cash</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows Ã— 18 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Unnamed: 0  age      gender year_in_school             major  \\\n",
       "0             0   19  Non-binary       Freshman        Psychology   \n",
       "1             1   24      Female         Junior         Economics   \n",
       "2             2   24  Non-binary         Junior         Economics   \n",
       "3             3   23      Female         Senior  Computer Science   \n",
       "4             4   20      Female         Senior  Computer Science   \n",
       "..          ...  ...         ...            ...               ...   \n",
       "995         995   22      Female         Senior           Biology   \n",
       "996         996   19      Female         Senior           Biology   \n",
       "997         997   20        Male         Junior         Economics   \n",
       "998         998   22  Non-binary         Senior         Economics   \n",
       "999         999   24  Non-binary      Sophomore  Computer Science   \n",
       "\n",
       "     monthly_income  financial_aid  tuition  housing  food  transportation  \\\n",
       "0               958            270     5939      709   296             123   \n",
       "1              1006            875     4908      557   365              85   \n",
       "2               734            928     3051      666   220             137   \n",
       "3               617            265     4935      652   289             114   \n",
       "4               810            522     3887      825   372             168   \n",
       "..              ...            ...      ...      ...   ...             ...   \n",
       "995            1346            520     3688      969   152             194   \n",
       "996            1407            560     3380      508   265              52   \n",
       "997             957            393     3497      723   339             139   \n",
       "998            1174            612     3649      543   237             123   \n",
       "999             541            640     5965      609   270             191   \n",
       "\n",
       "     books_supplies  entertainment  personal_care  technology  \\\n",
       "0               188             41             78         134   \n",
       "1               252             74             92         226   \n",
       "2                99            130             23         239   \n",
       "3               223             99             30         163   \n",
       "4               194             48             71          88   \n",
       "..              ...            ...            ...         ...   \n",
       "995             151             42             38         252   \n",
       "996             206             40             98         274   \n",
       "997              69            112             46         284   \n",
       "998             200            129             90         190   \n",
       "999             215            139             43         281   \n",
       "\n",
       "     health_wellness  miscellaneous preferred_payment_method  \n",
       "0                127             72        Credit/Debit Card  \n",
       "1                129             68        Credit/Debit Card  \n",
       "2                112            133                     Cash  \n",
       "3                105             55       Mobile Payment App  \n",
       "4                 71            104        Credit/Debit Card  \n",
       "..               ...            ...                      ...  \n",
       "995               65            163                     Cash  \n",
       "996               84            135       Mobile Payment App  \n",
       "997               57             28       Mobile Payment App  \n",
       "998              101             65       Mobile Payment App  \n",
       "999               88            145                     Cash  \n",
       "\n",
       "[1000 rows x 18 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "File_path=(r\"C:\\Users\\Gebruiker\\Desktop\\IRONHACK\\WEEK_8\\FINAL_PROJECT_DA\\Data\\RAW\\student_spending.csv\")\n",
    "df1=pd.read_csv(File_path)\n",
    "df1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "467cc014-5166-437a-b8b7-28d87b5da295",
   "metadata": {},
   "source": [
    "# Printing columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "266a5be6-4137-483e-9c93-a2c79fec6818",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['Unnamed: 0', 'age', 'gender', 'year_in_school', 'major',\n",
      "       'monthly_income', 'financial_aid', 'tuition', 'housing', 'food',\n",
      "       'transportation', 'books_supplies', 'entertainment', 'personal_care',\n",
      "       'technology', 'health_wellness', 'miscellaneous',\n",
      "       'preferred_payment_method'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "print(df1.columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d2e886a-b3a7-4aaa-9f97-7b7e96490a66",
   "metadata": {},
   "source": [
    "# Dropping unnamed columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "dc5daf78-7756-43c5-98dc-0f323b28c1f7",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1 = df1.drop('Unnamed: 0', axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4f720b0d-993d-4920-8493-59793d861178",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>year_in_school</th>\n",
       "      <th>major</th>\n",
       "      <th>monthly_income</th>\n",
       "      <th>financial_aid</th>\n",
       "      <th>tuition</th>\n",
       "      <th>housing</th>\n",
       "      <th>food</th>\n",
       "      <th>transportation</th>\n",
       "      <th>books_supplies</th>\n",
       "      <th>entertainment</th>\n",
       "      <th>personal_care</th>\n",
       "      <th>technology</th>\n",
       "      <th>health_wellness</th>\n",
       "      <th>miscellaneous</th>\n",
       "      <th>preferred_payment_method</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Freshman</td>\n",
       "      <td>Psychology</td>\n",
       "      <td>958</td>\n",
       "      <td>270</td>\n",
       "      <td>5939</td>\n",
       "      <td>709</td>\n",
       "      <td>296</td>\n",
       "      <td>123</td>\n",
       "      <td>188</td>\n",
       "      <td>41</td>\n",
       "      <td>78</td>\n",
       "      <td>134</td>\n",
       "      <td>127</td>\n",
       "      <td>72</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>24</td>\n",
       "      <td>Female</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>1006</td>\n",
       "      <td>875</td>\n",
       "      <td>4908</td>\n",
       "      <td>557</td>\n",
       "      <td>365</td>\n",
       "      <td>85</td>\n",
       "      <td>252</td>\n",
       "      <td>74</td>\n",
       "      <td>92</td>\n",
       "      <td>226</td>\n",
       "      <td>129</td>\n",
       "      <td>68</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>24</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>734</td>\n",
       "      <td>928</td>\n",
       "      <td>3051</td>\n",
       "      <td>666</td>\n",
       "      <td>220</td>\n",
       "      <td>137</td>\n",
       "      <td>99</td>\n",
       "      <td>130</td>\n",
       "      <td>23</td>\n",
       "      <td>239</td>\n",
       "      <td>112</td>\n",
       "      <td>133</td>\n",
       "      <td>Cash</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>617</td>\n",
       "      <td>265</td>\n",
       "      <td>4935</td>\n",
       "      <td>652</td>\n",
       "      <td>289</td>\n",
       "      <td>114</td>\n",
       "      <td>223</td>\n",
       "      <td>99</td>\n",
       "      <td>30</td>\n",
       "      <td>163</td>\n",
       "      <td>105</td>\n",
       "      <td>55</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>810</td>\n",
       "      <td>522</td>\n",
       "      <td>3887</td>\n",
       "      <td>825</td>\n",
       "      <td>372</td>\n",
       "      <td>168</td>\n",
       "      <td>194</td>\n",
       "      <td>48</td>\n",
       "      <td>71</td>\n",
       "      <td>88</td>\n",
       "      <td>71</td>\n",
       "      <td>104</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>22</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Biology</td>\n",
       "      <td>1346</td>\n",
       "      <td>520</td>\n",
       "      <td>3688</td>\n",
       "      <td>969</td>\n",
       "      <td>152</td>\n",
       "      <td>194</td>\n",
       "      <td>151</td>\n",
       "      <td>42</td>\n",
       "      <td>38</td>\n",
       "      <td>252</td>\n",
       "      <td>65</td>\n",
       "      <td>163</td>\n",
       "      <td>Cash</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>19</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Biology</td>\n",
       "      <td>1407</td>\n",
       "      <td>560</td>\n",
       "      <td>3380</td>\n",
       "      <td>508</td>\n",
       "      <td>265</td>\n",
       "      <td>52</td>\n",
       "      <td>206</td>\n",
       "      <td>40</td>\n",
       "      <td>98</td>\n",
       "      <td>274</td>\n",
       "      <td>84</td>\n",
       "      <td>135</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>20</td>\n",
       "      <td>Male</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>957</td>\n",
       "      <td>393</td>\n",
       "      <td>3497</td>\n",
       "      <td>723</td>\n",
       "      <td>339</td>\n",
       "      <td>139</td>\n",
       "      <td>69</td>\n",
       "      <td>112</td>\n",
       "      <td>46</td>\n",
       "      <td>284</td>\n",
       "      <td>57</td>\n",
       "      <td>28</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>22</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>1174</td>\n",
       "      <td>612</td>\n",
       "      <td>3649</td>\n",
       "      <td>543</td>\n",
       "      <td>237</td>\n",
       "      <td>123</td>\n",
       "      <td>200</td>\n",
       "      <td>129</td>\n",
       "      <td>90</td>\n",
       "      <td>190</td>\n",
       "      <td>101</td>\n",
       "      <td>65</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>24</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Sophomore</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>541</td>\n",
       "      <td>640</td>\n",
       "      <td>5965</td>\n",
       "      <td>609</td>\n",
       "      <td>270</td>\n",
       "      <td>191</td>\n",
       "      <td>215</td>\n",
       "      <td>139</td>\n",
       "      <td>43</td>\n",
       "      <td>281</td>\n",
       "      <td>88</td>\n",
       "      <td>145</td>\n",
       "      <td>Cash</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows Ã— 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     age      gender year_in_school             major  monthly_income  \\\n",
       "0     19  Non-binary       Freshman        Psychology             958   \n",
       "1     24      Female         Junior         Economics            1006   \n",
       "2     24  Non-binary         Junior         Economics             734   \n",
       "3     23      Female         Senior  Computer Science             617   \n",
       "4     20      Female         Senior  Computer Science             810   \n",
       "..   ...         ...            ...               ...             ...   \n",
       "995   22      Female         Senior           Biology            1346   \n",
       "996   19      Female         Senior           Biology            1407   \n",
       "997   20        Male         Junior         Economics             957   \n",
       "998   22  Non-binary         Senior         Economics            1174   \n",
       "999   24  Non-binary      Sophomore  Computer Science             541   \n",
       "\n",
       "     financial_aid  tuition  housing  food  transportation  books_supplies  \\\n",
       "0              270     5939      709   296             123             188   \n",
       "1              875     4908      557   365              85             252   \n",
       "2              928     3051      666   220             137              99   \n",
       "3              265     4935      652   289             114             223   \n",
       "4              522     3887      825   372             168             194   \n",
       "..             ...      ...      ...   ...             ...             ...   \n",
       "995            520     3688      969   152             194             151   \n",
       "996            560     3380      508   265              52             206   \n",
       "997            393     3497      723   339             139              69   \n",
       "998            612     3649      543   237             123             200   \n",
       "999            640     5965      609   270             191             215   \n",
       "\n",
       "     entertainment  personal_care  technology  health_wellness  miscellaneous  \\\n",
       "0               41             78         134              127             72   \n",
       "1               74             92         226              129             68   \n",
       "2              130             23         239              112            133   \n",
       "3               99             30         163              105             55   \n",
       "4               48             71          88               71            104   \n",
       "..             ...            ...         ...              ...            ...   \n",
       "995             42             38         252               65            163   \n",
       "996             40             98         274               84            135   \n",
       "997            112             46         284               57             28   \n",
       "998            129             90         190              101             65   \n",
       "999            139             43         281               88            145   \n",
       "\n",
       "    preferred_payment_method  \n",
       "0          Credit/Debit Card  \n",
       "1          Credit/Debit Card  \n",
       "2                       Cash  \n",
       "3         Mobile Payment App  \n",
       "4          Credit/Debit Card  \n",
       "..                       ...  \n",
       "995                     Cash  \n",
       "996       Mobile Payment App  \n",
       "997       Mobile Payment App  \n",
       "998       Mobile Payment App  \n",
       "999                     Cash  \n",
       "\n",
       "[1000 rows x 17 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5ab0ad8c",
   "metadata": {},
   "source": [
    "# Checking for duplicates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "6080ed01",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b29d5ba5",
   "metadata": {},
   "source": [
    "# Checking for missing values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "409241bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age                         0\n",
       "gender                      0\n",
       "year_in_school              0\n",
       "major                       0\n",
       "monthly_income              0\n",
       "financial_aid               0\n",
       "tuition                     0\n",
       "housing                     0\n",
       "food                        0\n",
       "transportation              0\n",
       "books_supplies              0\n",
       "entertainment               0\n",
       "personal_care               0\n",
       "technology                  0\n",
       "health_wellness             0\n",
       "miscellaneous               0\n",
       "preferred_payment_method    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d14e3084-cb04-4035-bc17-c16916a27549",
   "metadata": {},
   "source": [
    "# Plotting gender bar graph "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3568ad07-7502-4443-9598-abdd1f5ad4e6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Plotting\n",
    "df1['gender'].value_counts().plot(kind='bar', color='skyblue')\n",
    "plt.xlabel('Gender')\n",
    "plt.ylabel('Count')\n",
    "plt.title('Count of Each Gender')\n",
    "plt.xticks(rotation=0)  # Rotate x-axis labels if needed\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8fa0ef14-d4c4-4edc-a2da-2c4166a6c02e",
   "metadata": {},
   "source": [
    "# Plotting age bar graph"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a5fc4ec8-1e55-44c5-9dfc-7bb90a932fba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Plotting\n",
    "df1['age'].value_counts().plot(kind='bar', color='skyblue')\n",
    "plt.xlabel('Age')\n",
    "plt.ylabel('Count')\n",
    "plt.title('Count of Each Age')\n",
    "plt.xticks(rotation=0)  # Rotate x-axis labels if needed\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "56bd440e-84ba-4e4b-a89e-635cf1c0151c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Plotting\n",
    "df1['age'].value_counts().sort_index().plot(kind='line', color='skyblue', marker='o', linestyle='-')\n",
    "plt.xlabel('Age')\n",
    "plt.ylabel('Count')\n",
    "plt.title('Count of Each Age')\n",
    "plt.xticks(rotation=0)  # Rotate x-axis labels if needed\n",
    "plt.grid(True)  # Add gridlines\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3133d7be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "age\n",
       "25    145\n",
       "24    136\n",
       "22    130\n",
       "23    128\n",
       "18    124\n",
       "21    118\n",
       "20    111\n",
       "19    108\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1['age'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02c15bd4-6773-4ef7-bd41-33140513f89f",
   "metadata": {},
   "source": [
    "# Plot for preffered payment"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "1c27cfba-456d-435f-8022-7e8258e0ac72",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df1['preferred_payment_method'].value_counts().plot(kind='bar', color='skyblue')\n",
    "\n",
    "plt.ylabel('Count')\n",
    "plt.title('Preferred Payment Method')\n",
    "plt.xticks(rotation=0)  # Rotate x-axis labels if needed\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "4dbeeed7-05c1-4dc8-a897-a1a5b29b2a52",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "preferred_payment_method\n",
       "Mobile Payment App    350\n",
       "Credit/Debit Card     340\n",
       "Cash                  310\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1['preferred_payment_method'].value_counts()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ffb8808-c907-4e38-8878-3b54d6bbc946",
   "metadata": {},
   "source": [
    "# Plot for majors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f2d3b961-0983-44d3-a97a-1ad8fbf7fc97",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Get the counts of each major\n",
    "major_counts = df1[\"major\"].value_counts()\n",
    "\n",
    "# Plotting\n",
    "plt.figure(figsize=(10, 6))\n",
    "major_counts.plot(kind='bar', color='skyblue')\n",
    "plt.xlabel('Major')\n",
    "plt.ylabel('Count')\n",
    "plt.title('Count of Each Major')\n",
    "plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "989b7ba2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "major\n",
       "Biology             228\n",
       "Economics           204\n",
       "Computer Science    192\n",
       "Engineering         192\n",
       "Psychology          184\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1[\"major\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "84a17703-6d55-4227-9a75-6f7e8fb82fd8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "monthly_income\n",
       "1021    5\n",
       "1309    5\n",
       "1354    5\n",
       "1268    5\n",
       "1483    5\n",
       "       ..\n",
       "1179    1\n",
       "805     1\n",
       "990     1\n",
       "1485    1\n",
       "1407    1\n",
       "Name: count, Length: 619, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1['monthly_income'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6b580fff-3d1d-4fcd-9e32-4275491ac0e3",
   "metadata": {},
   "source": [
    "# Which student spends the most ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a85f687c-337a-47e1-934b-af55fb8f9554",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['total_expense'] = df1[['housing', 'food', 'transportation', 'books_supplies', 'entertainment', 'personal_care', 'technology', 'health_wellness', 'miscellaneous']].sum(axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "bc581252-f931-40f0-9b4c-1dac5b59f798",
   "metadata": {},
   "outputs": [],
   "source": [
    "max_spender = df1.loc[df1['total_expense'].idxmax()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d795f8ae-f9ca-4945-bdf0-dc5607e5182a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The student who spends the most is:\n",
      "age                                       18\n",
      "gender                                  Male\n",
      "year_in_school                        Senior\n",
      "major                       Computer Science\n",
      "total_expense                           2453\n",
      "preferred_payment_method                Cash\n",
      "Name: 726, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(\"The student who spends the most is:\")\n",
    "print(max_spender[['age', 'gender', 'year_in_school', 'major', 'total_expense','preferred_payment_method']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "6b3efeab-44da-4f98-a9a8-5ddf73aa4eee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>year_in_school</th>\n",
       "      <th>major</th>\n",
       "      <th>monthly_income</th>\n",
       "      <th>financial_aid</th>\n",
       "      <th>tuition</th>\n",
       "      <th>housing</th>\n",
       "      <th>food</th>\n",
       "      <th>transportation</th>\n",
       "      <th>books_supplies</th>\n",
       "      <th>entertainment</th>\n",
       "      <th>personal_care</th>\n",
       "      <th>technology</th>\n",
       "      <th>health_wellness</th>\n",
       "      <th>miscellaneous</th>\n",
       "      <th>preferred_payment_method</th>\n",
       "      <th>total_expense</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Freshman</td>\n",
       "      <td>Psychology</td>\n",
       "      <td>958</td>\n",
       "      <td>270</td>\n",
       "      <td>5939</td>\n",
       "      <td>709</td>\n",
       "      <td>296</td>\n",
       "      <td>123</td>\n",
       "      <td>188</td>\n",
       "      <td>41</td>\n",
       "      <td>78</td>\n",
       "      <td>134</td>\n",
       "      <td>127</td>\n",
       "      <td>72</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "      <td>1768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>24</td>\n",
       "      <td>Female</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>1006</td>\n",
       "      <td>875</td>\n",
       "      <td>4908</td>\n",
       "      <td>557</td>\n",
       "      <td>365</td>\n",
       "      <td>85</td>\n",
       "      <td>252</td>\n",
       "      <td>74</td>\n",
       "      <td>92</td>\n",
       "      <td>226</td>\n",
       "      <td>129</td>\n",
       "      <td>68</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "      <td>1848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>24</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>734</td>\n",
       "      <td>928</td>\n",
       "      <td>3051</td>\n",
       "      <td>666</td>\n",
       "      <td>220</td>\n",
       "      <td>137</td>\n",
       "      <td>99</td>\n",
       "      <td>130</td>\n",
       "      <td>23</td>\n",
       "      <td>239</td>\n",
       "      <td>112</td>\n",
       "      <td>133</td>\n",
       "      <td>Cash</td>\n",
       "      <td>1759</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>617</td>\n",
       "      <td>265</td>\n",
       "      <td>4935</td>\n",
       "      <td>652</td>\n",
       "      <td>289</td>\n",
       "      <td>114</td>\n",
       "      <td>223</td>\n",
       "      <td>99</td>\n",
       "      <td>30</td>\n",
       "      <td>163</td>\n",
       "      <td>105</td>\n",
       "      <td>55</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "      <td>1730</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>810</td>\n",
       "      <td>522</td>\n",
       "      <td>3887</td>\n",
       "      <td>825</td>\n",
       "      <td>372</td>\n",
       "      <td>168</td>\n",
       "      <td>194</td>\n",
       "      <td>48</td>\n",
       "      <td>71</td>\n",
       "      <td>88</td>\n",
       "      <td>71</td>\n",
       "      <td>104</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "      <td>1941</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>22</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Biology</td>\n",
       "      <td>1346</td>\n",
       "      <td>520</td>\n",
       "      <td>3688</td>\n",
       "      <td>969</td>\n",
       "      <td>152</td>\n",
       "      <td>194</td>\n",
       "      <td>151</td>\n",
       "      <td>42</td>\n",
       "      <td>38</td>\n",
       "      <td>252</td>\n",
       "      <td>65</td>\n",
       "      <td>163</td>\n",
       "      <td>Cash</td>\n",
       "      <td>2026</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>19</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Biology</td>\n",
       "      <td>1407</td>\n",
       "      <td>560</td>\n",
       "      <td>3380</td>\n",
       "      <td>508</td>\n",
       "      <td>265</td>\n",
       "      <td>52</td>\n",
       "      <td>206</td>\n",
       "      <td>40</td>\n",
       "      <td>98</td>\n",
       "      <td>274</td>\n",
       "      <td>84</td>\n",
       "      <td>135</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "      <td>1662</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>20</td>\n",
       "      <td>Male</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>957</td>\n",
       "      <td>393</td>\n",
       "      <td>3497</td>\n",
       "      <td>723</td>\n",
       "      <td>339</td>\n",
       "      <td>139</td>\n",
       "      <td>69</td>\n",
       "      <td>112</td>\n",
       "      <td>46</td>\n",
       "      <td>284</td>\n",
       "      <td>57</td>\n",
       "      <td>28</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "      <td>1797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>22</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>1174</td>\n",
       "      <td>612</td>\n",
       "      <td>3649</td>\n",
       "      <td>543</td>\n",
       "      <td>237</td>\n",
       "      <td>123</td>\n",
       "      <td>200</td>\n",
       "      <td>129</td>\n",
       "      <td>90</td>\n",
       "      <td>190</td>\n",
       "      <td>101</td>\n",
       "      <td>65</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "      <td>1678</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>24</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Sophomore</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>541</td>\n",
       "      <td>640</td>\n",
       "      <td>5965</td>\n",
       "      <td>609</td>\n",
       "      <td>270</td>\n",
       "      <td>191</td>\n",
       "      <td>215</td>\n",
       "      <td>139</td>\n",
       "      <td>43</td>\n",
       "      <td>281</td>\n",
       "      <td>88</td>\n",
       "      <td>145</td>\n",
       "      <td>Cash</td>\n",
       "      <td>1981</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows Ã— 18 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     age      gender year_in_school             major  monthly_income  \\\n",
       "0     19  Non-binary       Freshman        Psychology             958   \n",
       "1     24      Female         Junior         Economics            1006   \n",
       "2     24  Non-binary         Junior         Economics             734   \n",
       "3     23      Female         Senior  Computer Science             617   \n",
       "4     20      Female         Senior  Computer Science             810   \n",
       "..   ...         ...            ...               ...             ...   \n",
       "995   22      Female         Senior           Biology            1346   \n",
       "996   19      Female         Senior           Biology            1407   \n",
       "997   20        Male         Junior         Economics             957   \n",
       "998   22  Non-binary         Senior         Economics            1174   \n",
       "999   24  Non-binary      Sophomore  Computer Science             541   \n",
       "\n",
       "     financial_aid  tuition  housing  food  transportation  books_supplies  \\\n",
       "0              270     5939      709   296             123             188   \n",
       "1              875     4908      557   365              85             252   \n",
       "2              928     3051      666   220             137              99   \n",
       "3              265     4935      652   289             114             223   \n",
       "4              522     3887      825   372             168             194   \n",
       "..             ...      ...      ...   ...             ...             ...   \n",
       "995            520     3688      969   152             194             151   \n",
       "996            560     3380      508   265              52             206   \n",
       "997            393     3497      723   339             139              69   \n",
       "998            612     3649      543   237             123             200   \n",
       "999            640     5965      609   270             191             215   \n",
       "\n",
       "     entertainment  personal_care  technology  health_wellness  miscellaneous  \\\n",
       "0               41             78         134              127             72   \n",
       "1               74             92         226              129             68   \n",
       "2              130             23         239              112            133   \n",
       "3               99             30         163              105             55   \n",
       "4               48             71          88               71            104   \n",
       "..             ...            ...         ...              ...            ...   \n",
       "995             42             38         252               65            163   \n",
       "996             40             98         274               84            135   \n",
       "997            112             46         284               57             28   \n",
       "998            129             90         190              101             65   \n",
       "999            139             43         281               88            145   \n",
       "\n",
       "    preferred_payment_method  total_expense  \n",
       "0          Credit/Debit Card           1768  \n",
       "1          Credit/Debit Card           1848  \n",
       "2                       Cash           1759  \n",
       "3         Mobile Payment App           1730  \n",
       "4          Credit/Debit Card           1941  \n",
       "..                       ...            ...  \n",
       "995                     Cash           2026  \n",
       "996       Mobile Payment App           1662  \n",
       "997       Mobile Payment App           1797  \n",
       "998       Mobile Payment App           1678  \n",
       "999                     Cash           1981  \n",
       "\n",
       "[1000 rows x 18 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "95913d9f-c2b9-4076-b63a-8a43f584ab82",
   "metadata": {},
   "source": [
    "# Which student spends the least ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f7234eb5-9170-49b9-9da3-a8fd75a233bf",
   "metadata": {},
   "outputs": [],
   "source": [
    "min_spender = df1.loc[df1['total_expense'].idxmin()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8fa7c3c1-3c69-4f99-9a53-7f9d384f096b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The student who spends the least is:\n",
      "age                                24\n",
      "gender                         Female\n",
      "year_in_school                 Senior\n",
      "major                       Economics\n",
      "total_expense                    1055\n",
      "preferred_payment_method         Cash\n",
      "Name: 214, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(\"The student who spends the least is:\")\n",
    "print(min_spender[['age', 'gender', 'year_in_school', 'major', 'total_expense','preferred_payment_method']])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31657d69-0de8-44ab-8178-ac43c7f833a3",
   "metadata": {},
   "source": [
    "# Which student earns the most ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "43c8f6f6-699b-45fa-8aa8-6488990b1de0",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Total_income']=df1[['monthly_income']].sum(axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "210ae70d-f51d-4d65-942c-77a465a0fdf4",
   "metadata": {},
   "outputs": [],
   "source": [
    "max_earner = df1.loc[df1['Total_income'].idxmax()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "5cfa62ce-7bb6-43ed-a5b1-1e81595e47db",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The student who earns the most is:\n",
      "age                                       18\n",
      "gender                                  Male\n",
      "year_in_school                        Senior\n",
      "major                       Computer Science\n",
      "Total_income                            1500\n",
      "preferred_payment_method                Cash\n",
      "Name: 517, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(\"The student who earns the most is:\")\n",
    "print(max_earner[['age', 'gender', 'year_in_school', 'major', 'Total_income','preferred_payment_method']])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "99ed46b9-0b40-4bf2-9b30-7548af373139",
   "metadata": {},
   "source": [
    "# Which Student earns the least ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7f3c1bb7-6101-4cd3-9075-c33fbde001c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1['Total_income']=df1[['monthly_income']].sum(axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "534391bf-8f9c-460f-83f1-3bc02d65bcd7",
   "metadata": {},
   "outputs": [],
   "source": [
    "least_earner = df1.loc[df1['Total_income'].idxmin()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "46506b8f-ff16-4dfb-a9a1-5524dfa001c9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The student who earns the least is:\n",
      "age                                         18\n",
      "gender                                    Male\n",
      "year_in_school                        Freshman\n",
      "major                                  Biology\n",
      "Total_income                               501\n",
      "preferred_payment_method    Mobile Payment App\n",
      "Name: 876, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(\"The student who earns the least is:\")\n",
    "print(least_earner[['age', 'gender', 'year_in_school', 'major', 'Total_income','preferred_payment_method']])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b30e628b-c891-470c-bb89-ec909991afa7",
   "metadata": {},
   "source": [
    "# Top monthly income"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "e6588852",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "517    1500\n",
       "14     1496\n",
       "872    1496\n",
       "878    1495\n",
       "302    1495\n",
       "       ... \n",
       "203     504\n",
       "496     503\n",
       "549     503\n",
       "491     502\n",
       "876     501\n",
       "Name: monthly_income, Length: 1000, dtype: int64"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1['monthly_income'].sort_values(ascending=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7009fe4b-6512-4e34-a57d-022f4d1cb809",
   "metadata": {},
   "source": [
    "# Top 5 earners"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "8d7eac3c-23b7-41cb-a530-859f6b293c43",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     age      gender year_in_school             major  monthly_income\n",
      "517   18        Male         Senior  Computer Science            1500\n",
      "14    24  Non-binary       Freshman         Economics            1496\n",
      "872   24        Male      Sophomore        Psychology            1496\n",
      "302   25      Female       Freshman  Computer Science            1495\n",
      "878   19        Male         Senior        Psychology            1495\n"
     ]
    }
   ],
   "source": [
    "top_5_earners = df1.nlargest(5, 'monthly_income')\n",
    "print(top_5_earners[['age', 'gender', 'year_in_school', 'major', 'monthly_income']])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5bf1069e-b444-44c4-8ec0-8471c9665c44",
   "metadata": {},
   "source": [
    "# Top 5 spenders"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "4f5eb3e6-5fac-4cd4-b30d-64bbdd69bc43",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     age      gender year_in_school             major  monthly_income\n",
      "909   24      Female      Sophomore           Biology            1447\n",
      "469   23  Non-binary         Senior       Engineering            1461\n",
      "271   24        Male         Junior           Biology            1126\n",
      "214   24      Female         Senior         Economics             994\n",
      "108   20        Male      Sophomore  Computer Science             965\n"
     ]
    }
   ],
   "source": [
    "top_5_spenders_sorted = top_5_spenders.sort_index(ascending =False)\n",
    "print(top_5_spenders_sorted[['age', 'gender', 'year_in_school', 'major', 'monthly_income']])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "95fe4f2c-fa4f-4522-838f-fd32620a35e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>year_in_school</th>\n",
       "      <th>major</th>\n",
       "      <th>monthly_income</th>\n",
       "      <th>financial_aid</th>\n",
       "      <th>tuition</th>\n",
       "      <th>housing</th>\n",
       "      <th>food</th>\n",
       "      <th>transportation</th>\n",
       "      <th>books_supplies</th>\n",
       "      <th>entertainment</th>\n",
       "      <th>personal_care</th>\n",
       "      <th>technology</th>\n",
       "      <th>health_wellness</th>\n",
       "      <th>miscellaneous</th>\n",
       "      <th>preferred_payment_method</th>\n",
       "      <th>total_expense</th>\n",
       "      <th>Total_income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>24</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>994</td>\n",
       "      <td>940</td>\n",
       "      <td>4885</td>\n",
       "      <td>487</td>\n",
       "      <td>143</td>\n",
       "      <td>54</td>\n",
       "      <td>79</td>\n",
       "      <td>74</td>\n",
       "      <td>53</td>\n",
       "      <td>77</td>\n",
       "      <td>66</td>\n",
       "      <td>22</td>\n",
       "      <td>Cash</td>\n",
       "      <td>1055</td>\n",
       "      <td>994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271</th>\n",
       "      <td>24</td>\n",
       "      <td>Male</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Biology</td>\n",
       "      <td>1126</td>\n",
       "      <td>649</td>\n",
       "      <td>3565</td>\n",
       "      <td>483</td>\n",
       "      <td>259</td>\n",
       "      <td>63</td>\n",
       "      <td>53</td>\n",
       "      <td>57</td>\n",
       "      <td>43</td>\n",
       "      <td>65</td>\n",
       "      <td>40</td>\n",
       "      <td>86</td>\n",
       "      <td>Cash</td>\n",
       "      <td>1149</td>\n",
       "      <td>1126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>20</td>\n",
       "      <td>Male</td>\n",
       "      <td>Sophomore</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>965</td>\n",
       "      <td>322</td>\n",
       "      <td>4992</td>\n",
       "      <td>433</td>\n",
       "      <td>175</td>\n",
       "      <td>56</td>\n",
       "      <td>71</td>\n",
       "      <td>89</td>\n",
       "      <td>74</td>\n",
       "      <td>66</td>\n",
       "      <td>59</td>\n",
       "      <td>130</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "      <td>1153</td>\n",
       "      <td>965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>909</th>\n",
       "      <td>24</td>\n",
       "      <td>Female</td>\n",
       "      <td>Sophomore</td>\n",
       "      <td>Biology</td>\n",
       "      <td>1447</td>\n",
       "      <td>246</td>\n",
       "      <td>4038</td>\n",
       "      <td>406</td>\n",
       "      <td>235</td>\n",
       "      <td>113</td>\n",
       "      <td>98</td>\n",
       "      <td>113</td>\n",
       "      <td>50</td>\n",
       "      <td>71</td>\n",
       "      <td>37</td>\n",
       "      <td>33</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "      <td>1156</td>\n",
       "      <td>1447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>469</th>\n",
       "      <td>23</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Engineering</td>\n",
       "      <td>1461</td>\n",
       "      <td>299</td>\n",
       "      <td>4335</td>\n",
       "      <td>500</td>\n",
       "      <td>120</td>\n",
       "      <td>65</td>\n",
       "      <td>112</td>\n",
       "      <td>83</td>\n",
       "      <td>41</td>\n",
       "      <td>83</td>\n",
       "      <td>54</td>\n",
       "      <td>107</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "      <td>1165</td>\n",
       "      <td>1461</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     age      gender year_in_school             major  monthly_income  \\\n",
       "214   24      Female         Senior         Economics             994   \n",
       "271   24        Male         Junior           Biology            1126   \n",
       "108   20        Male      Sophomore  Computer Science             965   \n",
       "909   24      Female      Sophomore           Biology            1447   \n",
       "469   23  Non-binary         Senior       Engineering            1461   \n",
       "\n",
       "     financial_aid  tuition  housing  food  transportation  books_supplies  \\\n",
       "214            940     4885      487   143              54              79   \n",
       "271            649     3565      483   259              63              53   \n",
       "108            322     4992      433   175              56              71   \n",
       "909            246     4038      406   235             113              98   \n",
       "469            299     4335      500   120              65             112   \n",
       "\n",
       "     entertainment  personal_care  technology  health_wellness  miscellaneous  \\\n",
       "214             74             53          77               66             22   \n",
       "271             57             43          65               40             86   \n",
       "108             89             74          66               59            130   \n",
       "909            113             50          71               37             33   \n",
       "469             83             41          83               54            107   \n",
       "\n",
       "    preferred_payment_method  total_expense  Total_income  \n",
       "214                     Cash           1055           994  \n",
       "271                     Cash           1149          1126  \n",
       "108       Mobile Payment App           1153           965  \n",
       "909        Credit/Debit Card           1156          1447  \n",
       "469       Mobile Payment App           1165          1461  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_5_spenders"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "182527b9-c74b-4bf2-bc24-ee19d9bfd5ff",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f8aa80db-37dd-40b1-b7d6-1600b1e5e6a7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "381565f2-bc73-4613-b6c9-7c528b9db7ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA90AAAJOCAYAAACqS2TfAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8fJSN1AAAACXBIWXMAAA9hAAAPYQGoP6dpAAAyiElEQVR4nO3de7zVdZ3v8fcGZHMRMFRADqCo6GjcFJUQL2gkog/Ixkkzm9TpUScDHcRTDeMtzAnMG3bCy1GDUgynHFHrgOENjgpTkmRakTjeGgUVRzbgBAjr/NG4px135cvaG5/Px+P3eOz1Xb/1W5/FYz2El7/1W7umUqlUAgAAAGx3zao9AAAAAOysRDcAAAAUIroBAACgENENAAAAhYhuAAAAKER0AwAAQCGiGwAAAAoR3QAAAFCI6AYAAIBCRDcAAAAUIroB+FCoqanZqu3RRx+t2iwTJ07c4mOnTp262fnnz59ffP7G7LTTTktNTU2+/vWvV3sUAEiStKj2AACwI9x+++0Nbv/gBz/I7NmzN1g/6KCDdsg8n/jEJ/L5z3++wdohhxyy1Y+//PLL07Nnzw3W999//w88W1NVV1eX+++/P/vss09++MMfZuLEiampqan2WAB8yIluAD4UPve5zzW4PX/+/MyePXuD9R3lgAMO+EDPPXz48Bx22GHbcaL/tn79+qxZsyatWrUqcvy/tGrVqrRt2/YDH+fuu+/OunXr8r3vfS/HH3985s6dm2OPPXY7TAgA75+PlwPAf1m1alUuvPDCdO/ePbW1tTnwwANz9dVXp1KpNNivpqYmo0ePzrRp03LggQemVatWGTBgQObOnbtNz/ef//mf+eMf/7g9X0IDV199dY488sjsvvvuad26dQYMGJAf//jHG+z356/nox/9aGprazNr1qz6j7I//vjjGTt2bPbcc8+0bds2n/rUp/LGG29scJyZM2fm6KOPTtu2bdOuXbucfPLJefbZZxvsc/bZZ2fXXXfN888/n5NOOint2rXLmWeemSR57rnncuqpp6ZLly5p1apVunXrls985jNZvnz5Vr3eadOm5ROf+ESOO+64HHTQQZk2bdpG93v66adz7LHHpnXr1unWrVuuuOKKTJkyJTU1NXnxxRe3+TUBwOaIbgBIUqlUMnLkyFx33XU58cQTc+211+bAAw/MV7/61YwdO3aD/efMmZMxY8bkc5/7XC6//PIsW7YsJ554Yp555pmter6pU6embdu2ad26dQ4++ODceeed2zTv8uXL8+abbzbYli1b1mCf66+/Poccckguv/zyfOtb30qLFi3y6U9/Oj/96U83ON7DDz+cCy64IKeffnquv/767LPPPvX3nXfeefnVr36Vyy67LOeee27uv//+jB49usHjb7/99px88snZddddc+WVV+aSSy7Jb37zmxx11FEbhOy7776bYcOGpVOnTrn66qtz6qmnZs2aNRk2bFjmz5+f8847L5MnT86XvvSl/Nu//VvefvvtLf55vPrqq3nkkUdyxhlnJEnOOOOM/PjHP86aNWsa7Pfv//7vOe644/Lss89m3LhxueCCCzJt2rRcf/31GxxzW14TAGxSBQA+hEaNGlX5878GZ8yYUUlSueKKKxrs9zd/8zeVmpqayuLFi+vXklSSVJ588sn6tZdeeqnSqlWryqc+9aktPveRRx5ZmTRpUuXee++t3HjjjZXevXtXklRuuOGGLT52ypQp9c//l1ttbW2Dfd95550Gt9esWVPp3bt35fjjj2+wnqTSrFmzyrPPPrvR5xo6dGhl/fr19esXXHBBpXnz5pW33367UqlUKitWrKjstttulS9+8YsNHr9kyZJKhw4dGqyfddZZlSSVf/iHf2iw71NPPVVJUvnRj360xT+Djbn66qsrrVu3rtTV1VUqlUrl97//fSVJ5Z577mmw33nnnVepqampPPXUU/Vry5Ytq3Ts2LGSpPLCCy9s82sCgM1xphsAkvzf//t/07x585x//vkN1i+88MJUKpXMnDmzwfqgQYMyYMCA+ts9evTIJz/5yTzwwANZt27dZp/r8ccfz9///d9n5MiR+fKXv5wFCxakd+/e+cd//Mf853/+51bNO3ny5MyePbvB9pcztm7duv7n//iP/8jy5ctz9NFH55e//OUGxzv22GNz8MEHb/S5vvSlLzX4QrKjjz4669aty0svvZQkmT17dt5+++2cccYZDc68N2/ePAMHDswjjzyywTHPPffcBrc7dOiQJHnggQfyzjvvbNWfwZ+bNm1aTj755LRr1y5J0qtXrwwYMGCDj5jPmjUrgwYNSv/+/evXOnbsWP8R9/e8n9cEABvji9QAIMlLL72Url271kfbe977NvP3AvM9vXr12uAYBxxwQN5555288cYb6dKly1Y/d8uWLTN69Oj6AD/qqKO2+Jgjjjhii1+k9pOf/CRXXHFFFi5cmNWrV9evb+wbvTf2Tejv6dGjR4PbH/nIR5L8KeSTP12LnSTHH3/8Rh/fvn37BrdbtGiRbt26bfD8Y8eOzbXXXptp06bl6KOPzsiRI/O5z32uPsg35be//W2eeuqpfP7zn8/ixYvr14cMGZLJkyenrq6ufoaXXnopgwYN2uAYf/mt79v6mgBgU0Q3ADQC3bt3T5K89dZb2+V4/+///b+MHDkyxxxzTG644Ybstdde2WWXXTJlypSNXj/+52fF/1Lz5s03ul75ry+YW79+fZI/XQO9sf/Z0KJFw39u1NbWplmzDT9sd8011+Tss8/Ovffem5/97Gc5//zzM2HChMyfP3+DSP9zd9xxR5LkggsuyAUXXLDB/XfffXfOOeecTT5+Y7b1NQHApvgbAwCS7L333nnwwQezYsWKBme7f/e739Xf/+feOxP6537/+9+nTZs22XPPPbf5+f/t3/4tSd7XYzfm7rvvTqtWrfLAAw+ktra2fn3KlCnb5fh/br/99kuSdOrUKUOHDv1Ax+rTp0/69OmTiy++OE888UQGDx6cm266KVdcccVG969UKrnzzjtz3HHH5Stf+coG93/zm9/MtGnT6qN77733bnA2/D1/ubY9XxMAH26u6QaAJCeddFLWrVuX7373uw3Wr7vuutTU1GT48OEN1ufNm9fg2uhXXnkl9957b0444YRNnhlOstFftbVixYpMmjQpe+yxR4PrxD+I5s2bp6ampsH15S+++GJmzJixXY7/54YNG5b27dvnW9/6VtauXbvB/Rt7zX+prq4u7777boO1Pn36pFmzZg0+Gv+XHn/88bz44os555xz8jd/8zcbbKeffnoeeeSRvPrqq/Wzzps3LwsXLqw/xltvvbXBtd/b4zUBQOJMNwAkSUaMGJHjjjsuF110UV588cX069cvP/vZz3LvvfdmzJgx9Wc+39O7d+8MGzYs559/fmpra3PDDTckScaPH7/Z55k8eXJmzJiRESNGpEePHnnttdfyve99Ly+//HJuv/32tGzZcqvmnTlzZv1Z+D935JFHZt99983JJ5+ca6+9NieeeGI++9nP5vXXX8/kyZOz//775+mnn97KP5Wt0759+9x4443527/92xx66KH5zGc+kz333DMvv/xyfvrTn2bw4MEb/M+Mv/Twww9n9OjR+fSnP50DDjgg7777bm6//fY0b948p5566iYfN23atDRv3jwnn3zyRu8fOXJkLrrookyfPj1jx47N1772tdxxxx35xCc+kfPOOy9t27bNrbfemh49euStt96qv959e7wmAEhENwAkSZo1a5b77rsvl156ae66665MmTIl++yzT6666qpceOGFG+x/7LHHZtCgQRk/fnxefvnlHHzwwZk6dWr69u272ecZPHhwnnjiidx6661ZtmxZ2rZtmyOOOCLf+973NvmlXRtz6aWXbnR9ypQp2XfffXP88cfntttuy8SJEzNmzJj07NkzV155ZV588cXtHt1J8tnPfjZdu3bNxIkTc9VVV2X16tX5H//jf+Too4/equup+/Xrl2HDhuX+++/Pv//7v6dNmzbp169fZs6cmY997GMbfczatWvzox/9KEceeWQ6duy40X169+6dnj175o477sjYsWPTvXv3PPLIIzn//PPzrW99K3vuuWdGjRqVtm3b5vzzz0+rVq2222sCgCSpqbz3LSgAwFapqanJqFGjnOnciYwZMyY333xzVq5cudnLAwBgW7mmGwD4UPnL34W+bNmy3H777TnqqKMENwDbnY+XAwAfKoMGDcqQIUNy0EEHZenSpbnttttSV1eXSy65pNqjAbATEt0AwIfKSSedlB//+Mf5P//n/6SmpiaHHnpobrvtthxzzDHVHg2AnZBrugEAAKAQ13QDAABAIaIbAAAACtnpr+lev359Xn311bRr1y41NTXVHgcAAICdQKVSyYoVK9K1a9c0a7bp89k7fXS/+uqr6d69e7XHAAAAYCf0yiuvpFu3bpu8f6eP7nbt2iX50x9E+/btqzwNAAAAO4O6urp07969vjk3ZaeP7vc+Ut6+fXvRDQAAwHa1pcuYfZEaAAAAFCK6AQAAoBDRDQAAAIWIbgAAAChEdAMAAEAhohsAAAAKEd0AAABQiOgGAACAQkQ3AAAAFCK6AQAAoBDRDQAAAIWIbgAAAChEdAMAAEAhohsAAAAKEd0AAABQiOgGAACAQkQ3AAAAFFLV6J4wYUIOP/zwtGvXLp06dcopp5ySRYsWNdhnyJAhqampabB9+ctfrtLEAAAAsPWqGt1z5szJqFGjMn/+/MyePTtr167NCSeckFWrVjXY74tf/GJee+21+u3b3/52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aFD++Mc/Ztddd80999yTgw8+uNpjwWZNnz49v/zlL/OLX/yi2qOwA4huAKDeqFGj8swzz+Sxxx6r9iiwVQ488MAsXLgwy5cvz49//OOcddZZmTNnjvCm0XrllVfy93//95k9e3ZatWpV7XHYAUQ3jc4ee+yR5s2bZ+nSpQ3Wly5dmi5dulRpKoCd3+jRo/OTn/wkc+fOTbdu3ao9DmyVli1bZv/990+SDBgwIL/4xS9y/fXX5+abb67yZLBxCxYsyOuvv55DDz20fm3dunWZO3duvvvd72b16tVp3rx5FSdke3NNN41Oy5YtM2DAgDz00EP1a+vXr89DDz3kGi2AAiqVSkaPHp177rknDz/8cHr27FntkeB9W79+fVavXl3tMWCTPv7xj+fXv/51Fi5cWL8ddthhOfPMM7Nw4ULBvRNypptGaezYsTnrrLNy2GGH5YgjjsikSZOyatWqnHPOOdUeDTZr5cqVWbx4cf3tF154IQsXLkzHjh3To0ePKk4GmzZq1Kjceeeduffee9OuXbssWbIkSdKhQ4e0bt26ytPBpo0bNy7Dhw9Pjx49smLFitx555159NFH88ADD1R7NNikdu3abfCdGW3bts3uu+/uuzR2UqKbRun000/PG2+8kUsvvTRLlixJ//79M2vWrA2+XA0amyeffDLHHXdc/e2xY8cmSc4666xMnTq1SlPB5t14441JkiFDhjRYnzJlSs4+++wdPxBspddffz2f//zn89prr6VDhw7p27dvHnjggXziE5+o9mgA9fyebgAAACjENd0AAABQiOgGAACAQkQ3AAAAFCK6AQAAoBDRDQAAAIWIbgAAAChEdAMAAEAhohsAAAAKEd0AAABQiOgGgB2opqZms9s3vvGN7f6cQ4YM2ehzffnLX97uzwUANNSi2gMAwIfJa6+9Vv/zXXfdlUsvvTSLFi2qX9t1112LPO8Xv/jFXH755Q3W2rRp876Pt2bNmrRs2fKDjrXDjw0AO5oz3QCwA3Xp0qV+69ChQ2pqaupvd+rUKddee226deuW2tra9O/fP7Nmzap/7IsvvpiamppMnz49Rx55ZFq1apXevXtnzpw5W3zeNm3aNHjuLl26pH379vX3f/3rX88BBxyQNm3aZN99980ll1yStWvX1t//jW98I/3798+tt96anj17plWrVkn+dOb+1ltvzac+9am0adMmvXr1yn333dfguZ955pkMHz48u+66azp37py//du/zZtvvll//5AhQzJ69OiMGTMme+yxR4YNG5ZKpZJvfOMb6dGjR2pra9O1a9ecf/757/vPHQCqRXQDQCNx/fXX55prrsnVV1+dp59+OsOGDcvIkSPz3HPPNdjvq1/9ai688MI89dRTGTRoUEaMGJFly5Z9oOdu165dpk6dmt/85je5/vrrc8stt+S6665rsM/ixYtz991351/+5V+ycOHC+vXx48fntNNOy9NPP52TTjopZ555Zt56660kydtvv53jjz8+hxxySJ588snMmjUrS5cuzWmnndbg2N///vfTsmXLPP7447npppty991357rrrsvNN9+c5557LjNmzEifPn0+0GsEgKqoAABVMWXKlEqHDh3qb3ft2rXyT//0Tw32Ofzwwytf+cpXKpVKpfLCCy9UklQmTpxYf//atWsr3bp1q1x55ZWbfJ5jjz22sssuu1Tatm3bYLvjjjs2+ZirrrqqMmDAgPrbl112WWWXXXapvP766w32S1K5+OKL62+vXLmykqQyc+bMSqVSqXzzm9+snHDCCQ0e88orr1SSVBYtWlQ/3yGHHNJgn2uuuaZywAEHVNasWbPJGQGgKXBNNwA0AnV1dXn11VczePDgBuuDBw/Or371qwZrgwYNqv+5RYsWOeyww/Lb3/52s8c/88wzc9FFFzVY69y5c/3Pd911V77zne/k+eefz8qVK/Puu+82+Ph5kuy9997Zc889Nzh23759639u27Zt2rdvn9dffz1J8qtf/SqPPPLIRq9Vf/7553PAAQckSQYMGNDgvk9/+tOZNGlS9t1335x44ok56aSTMmLEiLRo4Z8uADQt/uYCgA+BDh06ZP/999/offPmzcuZZ56Z8ePHZ9iwYenQoUOmT5+ea665psF+bdu23ejjd9lllwa3a2pqsn79+iTJypUrM2LEiFx55ZUbPG6vvfba5LG7d++eRYsW5cEHH8zs2bPzla98JVdddVXmzJmzwfMBQGPmmm4AaATat2+frl275vHHH2+w/vjjj+fggw9usDZ//vz6n999990sWLAgBx100Pt+7ieeeCJ77713Lrroohx22GHp1atXXnrppfd9vD936KGH5tlnn80+++yT/fffv8G2qYh/T+vWrTNixIh85zvfyaOPPpp58+bl17/+9XaZCwB2FGe6AaCR+OpXv5rLLrss++23X/r3758pU6Zk4cKFmTZtWoP9Jk+enF69euWggw7Kddddl//4j//I3/3d32322O+8806WLFnSYK22tjYf+chH0qtXr7z88suZPn16Dj/88Pz0pz/NPffcs11e06hRo3LLLbfkjDPOyNe+9rV07NgxixcvzvTp03PrrbemefPmG33c1KlTs27dugwcODBt2rTJHXfckdatW2fvvffeLnMBwI7iTDcANBLnn39+xo4dmwsvvDB9+vTJrFmzct9996VXr14N9ps4cWImTpyYfv365bHHHst9992XPfbYY7PHvuWWW7LXXns12M4444wkyciRI3PBBRdk9OjR6d+/f5544olccskl2+U1vXf2ft26dTnhhBPSp0+fjBkzJrvttluaNdv0P0N222233HLLLRk8eHD69u2bBx98MPfff39233337TIXAOwoNZVKpVLtIQCALXvxxRfTs2fPPPXUU+nfv3+1xwEAtoIz3QAAAFCI6AYAAIBCfLwcAAAACnGmGwAAAAoR3QAAAFCI6AYAAIBCRDcAAAAUIroBAACgENENAAAAhYhuAAAAKER0AwAAQCGiGwAAAAr5/04UEb8618JsAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Extracting data for plotting\n",
    "ages = top_5_earners['age']\n",
    "genders = top_5_earners['gender']\n",
    "years_in_school = top_5_earners['year_in_school']\n",
    "majors = top_5_earners['major']\n",
    "monthly_income = top_5_earners['monthly_income']\n",
    "\n",
    "# Plotting\n",
    "plt.figure(figsize=(10, 6))\n",
    "\n",
    "plt.bar(range(len(ages)), ages, color='salmon')\n",
    "plt.xlabel('Top Earners')\n",
    "plt.ylabel('Age')\n",
    "plt.title('Top 5 Earners Age')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "0bb8f21b-87d6-4c03-9324-ad76f1c508b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Extracting data for plotting\n",
    "ages = top_5_earners['age']\n",
    "genders = top_5_earners['gender']\n",
    "years_in_school = top_5_earners['year_in_school']\n",
    "majors = top_5_earners['major']\n",
    "monthly_income = top_5_earners['monthly_income']\n",
    "\n",
    "# Plotting\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.bar(range(len(ages)), monthly_income, color='skyblue')\n",
    "plt.xlabel('Top Earners')\n",
    "plt.ylabel('Monthly Income')\n",
    "plt.title('Top 5 Earners Monthly Income')\n",
    "\n",
    "\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "79cdb0bc-e3ae-4f01-a5f6-1564a4758e03",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The student who spends the most spends the most on: tuition\n",
      "The student who spends the most spends the least on: personal_care\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# Convert expense columns to numeric\n",
    "expense_columns = df1.columns[5:-4]  # Assuming expenses start from the 6th column and end before the last column\n",
    "df1[expense_columns] = df1[expense_columns].apply(pd.to_numeric, errors='coerce')\n",
    "\n",
    "# Find the index of the row with the maximum total expense\n",
    "max_spender_index = df1['total_expense'].idxmax()\n",
    "\n",
    "# Extract the expense categories and their amounts for the student who spends the most\n",
    "expenses = df1.loc[max_spender_index, expense_columns]\n",
    "\n",
    "# Find the highest and lowest expenses\n",
    "highest_expense = expenses.idxmax()\n",
    "lowest_expense = expenses.idxmin()\n",
    "\n",
    "# Print the results\n",
    "print(\"The student who spends the most spends the most on:\", highest_expense)\n",
    "print(\"The student who spends the most spends the least on:\", lowest_expense)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "12c0e1e0-be43-4648-90ac-a76a95d0b9c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>year_in_school</th>\n",
       "      <th>major</th>\n",
       "      <th>monthly_income</th>\n",
       "      <th>financial_aid</th>\n",
       "      <th>tuition</th>\n",
       "      <th>housing</th>\n",
       "      <th>food</th>\n",
       "      <th>transportation</th>\n",
       "      <th>books_supplies</th>\n",
       "      <th>entertainment</th>\n",
       "      <th>personal_care</th>\n",
       "      <th>technology</th>\n",
       "      <th>health_wellness</th>\n",
       "      <th>miscellaneous</th>\n",
       "      <th>preferred_payment_method</th>\n",
       "      <th>total_expense</th>\n",
       "      <th>Total_income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>19</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Freshman</td>\n",
       "      <td>Psychology</td>\n",
       "      <td>958</td>\n",
       "      <td>270</td>\n",
       "      <td>5939</td>\n",
       "      <td>709</td>\n",
       "      <td>296</td>\n",
       "      <td>123</td>\n",
       "      <td>188</td>\n",
       "      <td>41</td>\n",
       "      <td>78</td>\n",
       "      <td>134</td>\n",
       "      <td>127</td>\n",
       "      <td>72</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "      <td>1768</td>\n",
       "      <td>958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>24</td>\n",
       "      <td>Female</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>1006</td>\n",
       "      <td>875</td>\n",
       "      <td>4908</td>\n",
       "      <td>557</td>\n",
       "      <td>365</td>\n",
       "      <td>85</td>\n",
       "      <td>252</td>\n",
       "      <td>74</td>\n",
       "      <td>92</td>\n",
       "      <td>226</td>\n",
       "      <td>129</td>\n",
       "      <td>68</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "      <td>1848</td>\n",
       "      <td>1006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>24</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>734</td>\n",
       "      <td>928</td>\n",
       "      <td>3051</td>\n",
       "      <td>666</td>\n",
       "      <td>220</td>\n",
       "      <td>137</td>\n",
       "      <td>99</td>\n",
       "      <td>130</td>\n",
       "      <td>23</td>\n",
       "      <td>239</td>\n",
       "      <td>112</td>\n",
       "      <td>133</td>\n",
       "      <td>Cash</td>\n",
       "      <td>1759</td>\n",
       "      <td>734</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>23</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>617</td>\n",
       "      <td>265</td>\n",
       "      <td>4935</td>\n",
       "      <td>652</td>\n",
       "      <td>289</td>\n",
       "      <td>114</td>\n",
       "      <td>223</td>\n",
       "      <td>99</td>\n",
       "      <td>30</td>\n",
       "      <td>163</td>\n",
       "      <td>105</td>\n",
       "      <td>55</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "      <td>1730</td>\n",
       "      <td>617</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>20</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>810</td>\n",
       "      <td>522</td>\n",
       "      <td>3887</td>\n",
       "      <td>825</td>\n",
       "      <td>372</td>\n",
       "      <td>168</td>\n",
       "      <td>194</td>\n",
       "      <td>48</td>\n",
       "      <td>71</td>\n",
       "      <td>88</td>\n",
       "      <td>71</td>\n",
       "      <td>104</td>\n",
       "      <td>Credit/Debit Card</td>\n",
       "      <td>1941</td>\n",
       "      <td>810</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>22</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Biology</td>\n",
       "      <td>1346</td>\n",
       "      <td>520</td>\n",
       "      <td>3688</td>\n",
       "      <td>969</td>\n",
       "      <td>152</td>\n",
       "      <td>194</td>\n",
       "      <td>151</td>\n",
       "      <td>42</td>\n",
       "      <td>38</td>\n",
       "      <td>252</td>\n",
       "      <td>65</td>\n",
       "      <td>163</td>\n",
       "      <td>Cash</td>\n",
       "      <td>2026</td>\n",
       "      <td>1346</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>19</td>\n",
       "      <td>Female</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Biology</td>\n",
       "      <td>1407</td>\n",
       "      <td>560</td>\n",
       "      <td>3380</td>\n",
       "      <td>508</td>\n",
       "      <td>265</td>\n",
       "      <td>52</td>\n",
       "      <td>206</td>\n",
       "      <td>40</td>\n",
       "      <td>98</td>\n",
       "      <td>274</td>\n",
       "      <td>84</td>\n",
       "      <td>135</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "      <td>1662</td>\n",
       "      <td>1407</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>20</td>\n",
       "      <td>Male</td>\n",
       "      <td>Junior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>957</td>\n",
       "      <td>393</td>\n",
       "      <td>3497</td>\n",
       "      <td>723</td>\n",
       "      <td>339</td>\n",
       "      <td>139</td>\n",
       "      <td>69</td>\n",
       "      <td>112</td>\n",
       "      <td>46</td>\n",
       "      <td>284</td>\n",
       "      <td>57</td>\n",
       "      <td>28</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "      <td>1797</td>\n",
       "      <td>957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>22</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Senior</td>\n",
       "      <td>Economics</td>\n",
       "      <td>1174</td>\n",
       "      <td>612</td>\n",
       "      <td>3649</td>\n",
       "      <td>543</td>\n",
       "      <td>237</td>\n",
       "      <td>123</td>\n",
       "      <td>200</td>\n",
       "      <td>129</td>\n",
       "      <td>90</td>\n",
       "      <td>190</td>\n",
       "      <td>101</td>\n",
       "      <td>65</td>\n",
       "      <td>Mobile Payment App</td>\n",
       "      <td>1678</td>\n",
       "      <td>1174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>24</td>\n",
       "      <td>Non-binary</td>\n",
       "      <td>Sophomore</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>541</td>\n",
       "      <td>640</td>\n",
       "      <td>5965</td>\n",
       "      <td>609</td>\n",
       "      <td>270</td>\n",
       "      <td>191</td>\n",
       "      <td>215</td>\n",
       "      <td>139</td>\n",
       "      <td>43</td>\n",
       "      <td>281</td>\n",
       "      <td>88</td>\n",
       "      <td>145</td>\n",
       "      <td>Cash</td>\n",
       "      <td>1981</td>\n",
       "      <td>541</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows Ã— 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     age      gender year_in_school             major  monthly_income  \\\n",
       "0     19  Non-binary       Freshman        Psychology             958   \n",
       "1     24      Female         Junior         Economics            1006   \n",
       "2     24  Non-binary         Junior         Economics             734   \n",
       "3     23      Female         Senior  Computer Science             617   \n",
       "4     20      Female         Senior  Computer Science             810   \n",
       "..   ...         ...            ...               ...             ...   \n",
       "995   22      Female         Senior           Biology            1346   \n",
       "996   19      Female         Senior           Biology            1407   \n",
       "997   20        Male         Junior         Economics             957   \n",
       "998   22  Non-binary         Senior         Economics            1174   \n",
       "999   24  Non-binary      Sophomore  Computer Science             541   \n",
       "\n",
       "     financial_aid  tuition  housing  food  transportation  books_supplies  \\\n",
       "0              270     5939      709   296             123             188   \n",
       "1              875     4908      557   365              85             252   \n",
       "2              928     3051      666   220             137              99   \n",
       "3              265     4935      652   289             114             223   \n",
       "4              522     3887      825   372             168             194   \n",
       "..             ...      ...      ...   ...             ...             ...   \n",
       "995            520     3688      969   152             194             151   \n",
       "996            560     3380      508   265              52             206   \n",
       "997            393     3497      723   339             139              69   \n",
       "998            612     3649      543   237             123             200   \n",
       "999            640     5965      609   270             191             215   \n",
       "\n",
       "     entertainment  personal_care  technology  health_wellness  miscellaneous  \\\n",
       "0               41             78         134              127             72   \n",
       "1               74             92         226              129             68   \n",
       "2              130             23         239              112            133   \n",
       "3               99             30         163              105             55   \n",
       "4               48             71          88               71            104   \n",
       "..             ...            ...         ...              ...            ...   \n",
       "995             42             38         252               65            163   \n",
       "996             40             98         274               84            135   \n",
       "997            112             46         284               57             28   \n",
       "998            129             90         190              101             65   \n",
       "999            139             43         281               88            145   \n",
       "\n",
       "    preferred_payment_method  total_expense  Total_income  \n",
       "0          Credit/Debit Card           1768           958  \n",
       "1          Credit/Debit Card           1848          1006  \n",
       "2                       Cash           1759           734  \n",
       "3         Mobile Payment App           1730           617  \n",
       "4          Credit/Debit Card           1941           810  \n",
       "..                       ...            ...           ...  \n",
       "995                     Cash           2026          1346  \n",
       "996       Mobile Payment App           1662          1407  \n",
       "997       Mobile Payment App           1797           957  \n",
       "998       Mobile Payment App           1678          1174  \n",
       "999                     Cash           1981           541  \n",
       "\n",
       "[1000 rows x 19 columns]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9a144550-fd89-445e-ae72-fa5f19ba387d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "81111e78-79f0-40f0-b8ec-e11a8703461c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0738bf8e-f724-442a-b2c8-513035fd5f3e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1e86e9d9-1adb-4ae5-aa5f-f16bf5e5e116",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "65230594-f76d-45a0-812b-a0644629a3de",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e12a836-9275-4c74-908e-20e992bd74c4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b72283bc-6592-4938-87df-1cfe6f3b5651",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91ce55a0-a448-48e4-a71b-fa630d7fb64a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "deb6381e-61cd-440b-aa08-fbc90ae6c0f0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5e04bd86-0637-4a7f-be3b-9d9b87cd67c2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "63561d49-3a45-45dd-b449-3113d58f585f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "507aaf75-dba6-4f20-b51f-5e55a5ff2f66",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "LAST_PROJECT",
   "language": "python",
   "name": "last_project"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
